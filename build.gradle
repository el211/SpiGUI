plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'com.samjakob'
version = '1.8.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()

    maven {
        url = 'https://repo.papermc.io/repository/maven-public/'
    }

    maven {
        name = 'spigotmc'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"

    implementation "net.kyori:adventure-api:4.17.0"
    implementation "net.kyori:adventure-text-minimessage:4.17.0"
    implementation "net.kyori:adventure-text-serializer-legacy:4.17.0"

    testImplementation "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"
    testImplementation "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
}


tasks.register('testJar', Jar) {
    from sourceSets.main.output.classesDirs
    from sourceSets.test.output.classesDirs
    from('src/test/resources') {
        include '**'
    }

    archiveBaseName.set("SpiGUITest")
    archiveClassifier.set('test')
}

publishing {
    publications {
        create('SpiGUI', MavenPublication) {
            from components.java

            pom {
                name.set('SpiGUI')
                description.set('A comprehensive GUI API for Spigot with pages support.')
                url.set('https://github.com/SamJakob/SpiGUI')

                licenses {
                    license {
                        name.set('MIT License')
                        url.set('https://opensource.org/licenses/MIT')
                    }
                }

                developers {
                    developer {
                        id.set('SamJakob')
                        name.set('Sam Jakob')
                        email.set('me@samjakob.com')
                        organization.set('SamJakob')
                        organizationUrl.set('https://samjakob.com')
                    }
                }

                scm {
                    connection.set('scm:git:git://github.com/SamJakob/SpiGUI.git')
                    developerConnection.set('scm:git:ssh://github.com:SamJakob/SpiGUI.git')
                    url.set('https://github.com/SamJakob/SpiGUI')
                }
            }
        }
    }

    repositories {
        maven {
            url = version.endsWith("SNAPSHOT") \
                    ? "https://s01.oss.sonatype.org/content/repositories/snapshots/" \
                    : "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"

            credentials {
                username = 'el211'
                password = 'ELIASps4@@'
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications['SpiGUI']
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }

    source = sourceSets.main.allJava
    classpath += configurations.runtimeClasspath

    options {
        encoding = 'UTF-8'
        memberLevel = JavadocMemberLevel.PRIVATE
    }
}


